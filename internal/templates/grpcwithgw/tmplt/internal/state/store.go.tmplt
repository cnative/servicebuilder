package state

import (
	"context"
	"errors"
	"io"

	"github.com/cnative/pkg/health"
	"google.golang.org/genproto/protobuf/field_mask"

	"{{ .ModuleName}}/internal/models"
)

//go:generate servicebuilder iwrap -z -f ./store.go -i {{ .ResourceName }}Store --output-dir ./ -p state -m "github.com/cnative/pkg/log"

const (
	// ASC Ascending sort order
	ASC SortOrder = iota - 1
	// DESC is Descending sort order
	DESC
)

var (
	// ErrNotImplemented not implmented yet
	ErrNotImplemented = errors.New("not implemented")

	// DefaultPageSize is the number of rows returned by default
	DefaultPageSize = 25
)

//SortOrder indicate Sort Order
type SortOrder int8

// Store provides access to data that is required for .
type {{ .ResourceName }}Store interface {
	Initialize(ctx context.Context) error
	io.Closer
	health.Probe

	Create{{ .ResourceName }}(ctx context.Context, r *models.{{ .ResourceName }}) (*models.{{ .ResourceName }}, error)
	Get{{ .ResourceName }}(ctx context.Context, name string) (*models.{{ .ResourceName }}, error)
	List{{ Pluralize .ResourceName }}(ctx context.Context, args *models.ListArgs) ([]*models.{{ .ResourceName }}, string, error)
	Update{{ .ResourceName }}(ctx context.Context, updateMask *field_mask.FieldMask, r *models.{{ .ResourceName }}) (*models.{{ .ResourceName }}, error)
	Delete{{ .ResourceName }}(ctx context.Context, name string) error
}
